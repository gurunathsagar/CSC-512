program=empty,int,void,binary,decimal,$

programz=left_parenthesis,comma,semicolon,left_bracket,$

programz7=semicolon,comma,$

programz1=int,void,binary,decimal,empty,$

programz2=int,void,binary,decimal,empty,$

funclist=int,void,binary,decimal,$

func=int,void,binary,decimal,int,void,binary,decimal

funcz=semicolon,left_brace,int,void,binary,decimal

funcz6=ID,if,while,return,break,continue,read,write,print,int,void,binary,decimal,right_brace,int,void,binary,decimal

funcz7=ID,if,while,return,break,continue,read,write,print,rigth_brace,int,void,binary,decimal

funcdecl=semicolon,left_brace,int,void,binary,decimal

funcdeclz=right_paranthesis,void,int,binary,decimal,semicolon,left_brace,int,void,binary,decimal

funcdeclz2=right_paranthesis,ID,semicolon,left_brace,int,void,binary,decimal

funcdeclz6=right_paranthesis,comma,semicolon,left_brace,int,void,binary,decimal

funcdeclz3=comma,right_paranthesis,semicolon,left_brace,int,void,binary,decimal

funcdeclz4=comma,right_paranthesis,semicolon,left_brace,int,void,binary,decimal

funcdeclz5=comma,right_paranthesis,semicolon,left_brace,int,void,binary,decimal

typename=int,void,binary,decimal,ID

non-emptylist=int,void,binary,decimal,right_paranthesis

non-emptylistz=empty,comma,right_paranthesis

non-emptylistp=comma,right_paranthesis

datadecls=int,void,binary,decimal,int,void,binary,decimal,empty,right_paranthesis,ID,semicolon,comma,$

datadeclsz=empty,int,void,binary,decimal,int,void,binary,decimal,empty,right_paranthesis,ID,semicolon,comma,$

idlist=ID,semicolon

idlistz=empty,comma,semicolon

idlistp=comma,semicolon

idlistpz=empty,ID,semicolon

id=ID,equal_sign,comma,empty,semicolon,

idz=empty,left_bracket,equal_sign,comma,empty,semicolon,

blockstatements=left_brace,empty,ID,if,while,return,break,continue,read,write,print,right_brace

blockstatementsz=ID,if,while,return,break,continue,read,write,print,empty,ID,if,while,return,break,continue,read,write,print,right_brace

statements=ID,if,while,return,break,continue,read,write,print,right_brace

statementsz=empty,ID,if,while,return,break,continue,read,write,print,right_brace

statement=ID,if,while,return,break,continue,read,write,print,empty,ID,if,while,return,break,continue,read,write,print,right_brace

statementz=left_bracket,equal_sign,left_parenthesis,empty,ID,if,while,return,break,continue,read,write,print,right_brace

statementz1=right_paranthesis,ID,empty,ID,if,while,return,break,continue,read,write,print,right_brace

exprlist=ID,right_paranthesis

non-emptyexprlist=ID,right_paranthesis

non-emptyexprlistp=empty,comma,right_paranthesis

ifstatement=if,empty,ID,if,while,return,break,continue,read,write,print,right_brace

conditionexpression=ID,right_paranthesis

conditionexpressionz=empty,double_and_sign,double_or_sign,right_paranthesis

conditionop=double_and_sign,double_or_sign,double_and_sign,double_or_sign

condition=ID,right_paranthesis

comparisonop===,!=,>,>=,<,<=,right_paranthesis

whilestatement=while,empty,ID,if,while,return,break,continue,read,write,print,right_brace

returnstatement=return,empty,ID,if,while,return,break,continue,read,write,print,right_brace

returnstatementz=ID,semicolon,empty,ID,if,while,return,break,continue,read,write,print,right_brace

breakstatement=break,empty,ID,if,while,return,break,continue,read,write,print,right_brace

continuestatement=continue,empty,ID,if,while,return,break,continue,read,write,print,right_brace

expression=ID,right_paranthesis

expressionp=plus_sign,minus_sign,empty,right_paranthesis

addop=plus_sign,minus_sign,ID

term=ID,plus_sign,minus_sign,empty,right_paranthesis

termp=empty,star_sign,forward_slash,plus_sign,minus_sign,empty,right_paranthesis

mulop=star_sign,forward_slash,ID

factor=ID,NUMBER,minus_sign,left_parenthesis,empty,star_sign,forward_slash,plus_sign,minus_sign,empty,right_paranthesis

factorz=empty,left_bracket,left_parenthesis,empty,star_sign,forward_slash,plus_sign,minus_sign,empty,right_paranthesis

factorz1=right_paranthesis,ID,empty,star_sign,forward_slash,plus_sign,minus_sign,empty,right_paranthesis