program=int,void,binary,decimal


programz=left_parenthesis,comma,semicolon,left_bracket


programz7=semicolon,comma


programz1=int,void,binary,decimal


programz2=int,void,binary,decimal


funclist=int,void,binary,decimal


func=int,void,binary,decimal


funcz=semicolon,left_brace


funcz6=ID,if,while,return,break,continue,read,write,print,int,void,binary,decimal,right_brace


funcz7=ID,if,while,return,break,continue,read,write,print,rigth_brace


funcdecl=semicolon,left_brace


funcdeclz=right_paranthesis,void,int,binary,decimal


funcdeclz2=right_paranthesis,ID


funcdeclz6=right_paranthesis,comma


funcdeclz3=comma,right_paranthesis


funcdeclz4=comma,right_paranthesis


funcdeclz5=comma,right_paranthesis


typename=int,void,binary,decimal


non-emptylist=int,void,binary,decimal


non-emptylistz=comma


non-emptylistp=comma


datadecls=int,void,binary,decimal


datadeclsz=int,void,binary,decimal


idlist=ID


idlistz=comma


idlistp=comma


idlistpz=ID


id=ID


idz=left_bracket


blockstatements=left_brace


blockstatementsz=ID,if,while,return,break,continue,read,write,print


statements=ID,if,while,return,break,continue,read,write,print


statementsz=ID,if,while,return,break,continue,read,write,print


statement=ID,if,while,return,break,continue,read,write,print


statementz=left_bracket,equal_sign,left_parenthesis


statementz1=right_paranthesis,ID


exprlist=ID


non-emptyexprlist=ID


non-emptyexprlistp=comma


ifstatement=if


conditionexpression=ID


conditionexpressionz=double_and_sign,double_or_sign


conditionop=double_and_sign,double_or_sign


condition=ID


comparisonop===,!=,,=,,=


whilestatement=while


returnstatement=return


returnstatementz=ID,semicolon


breakstatement=break


continuestatement=continue


expression=ID


expressionp=plus_sign,minus_sign


addop=plus_sign,minus_sign


term=ID


termp=star_sign,forward_slash


mulop=star_sign,forward_slash


factor=ID,NUMBER,minus_sign,left_parenthesis


factorz=left_bracket,left_parenthesis


factorz1=right_paranthesis,ID